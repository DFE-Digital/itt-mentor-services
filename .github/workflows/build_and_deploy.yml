name: Build and deploy to AKS cluster

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main


concurrency: deploy-${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      docker-image-tag: ${{ steps.build-image.outputs.tag }}
      matrix-environments: ${{ toJSON(steps.*.outputs.matrix-environment) }}

    if: ${{ contains(github.event.pull_request.labels.*.name, 'deploy') }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2
        bundler-cache: true
    - name: Use Node.js 20.9.0
      uses: actions/setup-node@v4
      with:
        node-version: 20.9.0
        cache: "npm"

  deploy:
        name: Deploy ${{ matrix.environment }}
        runs-on: ubuntu-latest
        needs: [build]
        environment:
          name: ${{ matrix.environment }}
          url: ${{ steps.get-app-url.outputs.url1 }}
        strategy:
          max-parallel: 1
          matrix:
            environment: ${{ fromJSON(needs.build.outputs.matrix-environments) }}

        if: ${{ contains(github.event.pull_request.labels.*.name, 'deploy') }}

        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - uses: hashicorp/setup-terraform@v3
            with:
              terraform_version: 1.6.4
              terraform_wrapper: false

          - uses: DFE-Digital/github-actions/set-arm-environment-variables@master
            with:
              azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}

          - name: Terraform Apply
            run: |
              make ci ${{ matrix.environment }} terraform-apply
            env:
              DOCKER_IMAGE_TAG: ${{ needs.build.outputs.docker-image-tag }}
              PR_NUMBER: ${{ github.event.pull_request.number }}
