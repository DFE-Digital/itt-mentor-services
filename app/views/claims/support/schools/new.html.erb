<% content_for :page_title, t(".title") %>
<% render "claims/support/primary_navigation", current: :organisations %>

<%= content_for(:before_content) do %>
  <%= govuk_back_link(href: claims_support_schools_path) %>
<% end %>

<div class="govuk-width-container">
  <%= form_with(
    model: @school_form,
    scope: :school,
    url: check_claims_support_schools_path,
    method: "get",
    data: {
      turbo: false,
      controller: "autocomplete",
      autocomplete_path_value: "/api/school_suggestions",
      autocomplete_return_attributes_value: %w[town postcode],
    },
  ) do |f| %>

    <%= f.govuk_error_summary %>

    <div class="govuk-grid-row">
      <div class="govuk-grid-column-two-thirds">
        <%= content_tag(:div, class: class_names("govuk-form-group", "govuk-form-group--error": f.object.errors.present?)) do %>
          <%= f.govuk_text_field :id, value: @school_form&.school&.name,
                                      label: { text: t(".title"), size: "l" },
                                      caption: { text: t(".caption"), size: "l" },
                                      data: { autocomplete_target: "serverInput",
                                              previous_search: @school_form&.school&.id } %>

          <div class="govuk-!-margin-bottom-7" data-autocomplete-target="input" data-input-name="school[name]"
            data-action="focusin->autocomplete#clearUndefinedSuggestions click->autocomplete#clearUndefinedSuggestions">
          </div>
        <% end %>

        <%= f.govuk_submit t(".continue") %>

        <p class="govuk-body">
          <%= govuk_link_to(t(".cancel"), claims_support_schools_path) %>
        </p>
      </div>
    </div>
  <% end %>
</div>
